quarkus.http.host=0.0.0.0
quarkus.http.port=8888

# OIDC config (adapté à Keycloak)
quarkus.oidc.auth-server-url=http://localhost:8180/realms/usager
quarkus.oidc.client-id=backend
quarkus.oidc.credentials.secret=secretsecretsecretsecretsecretsecret
quarkus.oidc.application-type=service
quarkus.oidc.authentication.redirect-path=/callback

# Autoriser les roles (adapté à Keycloak)
quarkus.http.auth.permission.roles-policy1.paths=/api/*
quarkus.http.auth.permission.roles-policy1.policy=roles
quarkus.http.auth.policy.roles.roles-allowed=teacher,student

#  Autoriser les accès sans token (pour les routes annotées avec @PermitAll)
quarkus.http.auth.permission.permit-all.paths=/public/*
quarkus.http.auth.permission.permit-all.policy=permit

quarkus.http.auth.permission.secured.paths=/*
quarkus.http.auth.permission.secured.policy=authenticated

# Gestion des cross origin
quarkus.http.cors=true
quarkus.http.cors.exposed-headers=location,info
quarkus.http.cors.access-control-max-age=24H
quarkus.http.cors.origins=http://localhost,http://localhost:8888,http://localhost:8180,
quarkus.http.cors.methods=GET,PUT,POST,DELETE,OPTIONS
quarkus.http.cors.headers=Authorization,Content-Type,Accept

# Source de données
quarkus.datasource.devservices.enabled=false
quarkus.datasource.jdbc.url=jdbc:postgresql://localhost:5444/postgres
quarkus.datasource.db-kind=postgresql
quarkus.datasource.jdbc.leak-detection-interval=5M
quarkus.datasource.username=postgres
quarkus.datasource.password=postgres

# Mapping object relationnal
quarkus.mybatis.xmlconfig.enable=false
quarkus.mybatis.map-underscore-to-camel-case=true

# Permettre l'utilisation de swagger
quarkus.http.auth.permission.swagger.paths=/q/swagger-ui/*,/q/openapi
quarkus.http.auth.permission.swagger.policy=permit

{
  "id" : "4c3a8224-5db2-42f0-a8cc-cba46cd01bb4",
  "realm" : "usager",
  "notBefore" : 0,
  "defaultSignatureAlgorithm" : "RS256",
  "revokeRefreshToken" : false,
  "refreshTokenMaxReuse" : 0,
  "accessTokenLifespan" : 300,
  "accessTokenLifespanForImplicitFlow" : 900,
  "ssoSessionIdleTimeout" : 1800,
  "ssoSessionMaxLifespan" : 36000,
  "ssoSessionIdleTimeoutRememberMe" : 0,
  "ssoSessionMaxLifespanRememberMe" : 0,
  "offlineSessionIdleTimeout" : 2592000,
  "offlineSessionMaxLifespanEnabled" : false,
  "offlineSessionMaxLifespan" : 5184000,
  "clientSessionIdleTimeout" : 0,
  "clientSessionMaxLifespan" : 0,
  "clientOfflineSessionIdleTimeout" : 0,
  "clientOfflineSessionMaxLifespan" : 0,
  "accessCodeLifespan" : 60,
  "accessCodeLifespanUserAction" : 300,
  "accessCodeLifespanLogin" : 1800,
  "actionTokenGeneratedByAdminLifespan" : 43200,
  "actionTokenGeneratedByUserLifespan" : 300,
  "oauth2DeviceCodeLifespan" : 600,
  "oauth2DevicePollingInterval" : 5,
  "enabled" : true,
  "sslRequired" : "external",
  "registrationAllowed" : false,
  "registrationEmailAsUsername" : false,
  "rememberMe" : false,
  "verifyEmail" : false,
  "loginWithEmailAllowed" : true,
  "duplicateEmailsAllowed" : false,
  "resetPasswordAllowed" : false,
  "editUsernameAllowed" : false,
  "bruteForceProtected" : false,
  "permanentLockout" : false,
  "maxFailureWaitSeconds" : 900,
  "minimumQuickLoginWaitSeconds" : 60,
  "waitIncrementSeconds" : 60,
  "quickLoginCheckMilliSeconds" : 1000,
  "maxDeltaTimeSeconds" : 43200,
  "failureFactor" : 30,
  "roles" : {
    "realm" : [ {
      "id" : "5e1f0bc4-a146-4ec9-9c38-72323913e831",
      "name" : "default-roles-usager",
      "description" : "${role_default-roles}",
      "composite" : true,
      "composites" : {
        "realm" : [ "offline_access", "uma_authorization" ],
        "client" : {
          "account" : [ "view-profile", "manage-account" ]
        }
      },
      "clientRole" : false,
      "containerId" : "4c3a8224-5db2-42f0-a8cc-cba46cd01bb4",
      "attributes" : { }
    }, {
      "id" : "396ef2b5-bbb1-44ee-99b1-603db8d9b823",
      "name" : "student",
      "composite" : false,
      "clientRole" : false,
      "containerId" : "4c3a8224-5db2-42f0-a8cc-cba46cd01bb4",
      "attributes" : { }
    }, {
      "id" : "99d434bf-eda3-413f-b855-7e3a4f7e3686",
      "name" : "offline_access",
      "description" : "${role_offline-access}",
      "composite" : false,
      "clientRole" : false,
      "containerId" : "4c3a8224-5db2-42f0-a8cc-cba46cd01bb4",
      "attributes" : { }
    }, {
      "id" : "a0c15285-d050-49fc-958e-0e8012a9fb73",
      "name" : "uma_authorization",
      "description" : "${role_uma_authorization}",
      "composite" : false,
      "clientRole" : false,
      "containerId" : "4c3a8224-5db2-42f0-a8cc-cba46cd01bb4",
      "attributes" : { }
    } ],
    "client" : {
      "realm-management" : [ {
        "id" : "98b4b3e9-614e-47bc-afb8-a547d63543c6",
        "name" : "manage-events",
        "description" : "${role_manage-events}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "69623140-af55-4d68-99c1-8f6a92eec086",
        "attributes" : { }
      }, {
        "id" : "cc9a47f6-5632-44c7-9fc4-123a77d6d2fb",
        "name" : "query-realms",
        "description" : "${role_query-realms}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "69623140-af55-4d68-99c1-8f6a92eec086",
        "attributes" : { }
      }, {
        "id" : "e2a93764-3ae6-4ba1-9dda-d117fb143f0b",
        "name" : "view-events",
        "description" : "${role_view-events}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "69623140-af55-4d68-99c1-8f6a92eec086",
        "attributes" : { }
      }, {
        "id" : "873e0adf-8bcb-4729-b7cd-172923add4d5",
        "name" : "manage-authorization",
        "description" : "${role_manage-authorization}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "69623140-af55-4d68-99c1-8f6a92eec086",
        "attributes" : { }
      }, {
        "id" : "adac4bee-8a16-47a8-8b75-3866d3a831d7",
        "name" : "query-users",
        "description" : "${role_query-users}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "69623140-af55-4d68-99c1-8f6a92eec086",
        "attributes" : { }
      }, {
        "id" : "fed108fc-e398-4c6b-95ea-ea57a54bc038",
        "name" : "manage-identity-providers",
        "description" : "${role_manage-identity-providers}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "69623140-af55-4d68-99c1-8f6a92eec086",
        "attributes" : { }
      }, {
        "id" : "fb6aaff5-38d8-4bd3-ba0c-5091e571c630",
        "name" : "manage-realm",
        "description" : "${role_manage-realm}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "69623140-af55-4d68-99c1-8f6a92eec086",
        "attributes" : { }
      }, {
        "id" : "828531e0-901c-45ba-bba1-d61130171d4d",
        "name" : "view-users",
        "description" : "${role_view-users}",
        "composite" : true,
        "composites" : {
          "client" : {
            "realm-management" : [ "query-groups", "query-users" ]
          }
        },
        "clientRole" : true,
        "containerId" : "69623140-af55-4d68-99c1-8f6a92eec086",
        "attributes" : { }
      }, {
        "id" : "f10e001d-74cc-4aa4-9307-7bf3ea1cb9e4",
        "name" : "query-groups",
        "description" : "${role_query-groups}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "69623140-af55-4d68-99c1-8f6a92eec086",
        "attributes" : { }
      }, {
        "id" : "4a3f90d5-2a7a-47d7-912b-1865fec411ec",
        "name" : "view-identity-providers",
        "description" : "${role_view-identity-providers}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "69623140-af55-4d68-99c1-8f6a92eec086",
        "attributes" : { }
      }, {
        "id" : "43c43d14-41a9-414a-b684-2942e20be756",
        "name" : "query-clients",
        "description" : "${role_query-clients}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "69623140-af55-4d68-99c1-8f6a92eec086",
        "attributes" : { }
      }, {
        "id" : "9b137041-cc48-4419-8a20-959c37677e68",
        "name" : "manage-clients",
        "description" : "${role_manage-clients}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "69623140-af55-4d68-99c1-8f6a92eec086",
        "attributes" : { }
      }, {
        "id" : "d1673aff-2301-49d4-88f1-59d95b831465",
        "name" : "manage-users",
        "description" : "${role_manage-users}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "69623140-af55-4d68-99c1-8f6a92eec086",
        "attributes" : { }
      }, {
        "id" : "504b3916-874c-4796-a184-2c862d6b8fa2",
        "name" : "realm-admin",
        "description" : "${role_realm-admin}",
        "composite" : true,
        "composites" : {
          "client" : {
            "realm-management" : [ "manage-events", "query-realms", "view-events", "manage-authorization", "query-users", "manage-realm", "manage-identity-providers", "view-users", "query-groups", "view-identity-providers", "query-clients", "view-authorization", "manage-clients", "manage-users", "view-realm", "view-clients", "create-client", "impersonation" ]
          }
        },
        "clientRole" : true,
        "containerId" : "69623140-af55-4d68-99c1-8f6a92eec086",
        "attributes" : { }
      }, {
        "id" : "80b575fe-a86a-4fb0-b48a-c7e54ccbe69a",
        "name" : "view-authorization",
        "description" : "${role_view-authorization}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "69623140-af55-4d68-99c1-8f6a92eec086",
        "attributes" : { }
      }, {
        "id" : "8a33dc21-516e-4c33-aeea-2a7de48215b1",
        "name" : "view-realm",
        "description" : "${role_view-realm}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "69623140-af55-4d68-99c1-8f6a92eec086",
        "attributes" : { }
      }, {
        "id" : "ac07f67d-a6e3-4bac-b15b-cae9af2e3858",
        "name" : "view-clients",
        "description" : "${role_view-clients}",
        "composite" : true,
        "composites" : {
          "client" : {
            "realm-management" : [ "query-clients" ]
          }
        },
        "clientRole" : true,
        "containerId" : "69623140-af55-4d68-99c1-8f6a92eec086",
        "attributes" : { }
      }, {
        "id" : "854e09f4-8608-425a-9632-ad819ee2b172",
        "name" : "create-client",
        "description" : "${role_create-client}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "69623140-af55-4d68-99c1-8f6a92eec086",
        "attributes" : { }
      }, {
        "id" : "a7d1df7a-2423-4084-9311-9a38c9f1257c",
        "name" : "impersonation",
        "description" : "${role_impersonation}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "69623140-af55-4d68-99c1-8f6a92eec086",
        "attributes" : { }
      } ],
      "security-admin-console" : [ ],
      "admin-cli" : [ ],
      "backend" : [ ],
      "account-console" : [ ],
      "broker" : [ {
        "id" : "4de49779-98f7-4e69-880a-90354f58ba7e",
        "name" : "read-token",
        "description" : "${role_read-token}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "fcc477a2-ea6a-4a81-b26a-1f25d28303d7",
        "attributes" : { }
      } ],
      "account" : [ {
        "id" : "31ca0f78-9e70-4bbc-80c3-b130e9fa0b00",
        "name" : "manage-account-links",
        "description" : "${role_manage-account-links}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "b40253a2-dbb9-40ee-ac7c-1350856af37c",
        "attributes" : { }
      }, {
        "id" : "97a698a7-a7ab-4130-a90a-2d0a4dbddc02",
        "name" : "view-profile",
        "description" : "${role_view-profile}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "b40253a2-dbb9-40ee-ac7c-1350856af37c",
        "attributes" : { }
      }, {
        "id" : "badae957-a584-488e-b3e6-7300f4b8e4ec",
        "name" : "delete-account",
        "description" : "${role_delete-account}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "b40253a2-dbb9-40ee-ac7c-1350856af37c",
        "attributes" : { }
      }, {
        "id" : "aa0fb66c-845a-4400-b20d-30a9fd8a419a",
        "name" : "view-applications",
        "description" : "${role_view-applications}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "b40253a2-dbb9-40ee-ac7c-1350856af37c",
        "attributes" : { }
      }, {
        "id" : "7e735fe7-1d38-4622-8321-71642b879e04",
        "name" : "manage-account",
        "description" : "${role_manage-account}",
        "composite" : true,
        "composites" : {
          "client" : {
            "account" : [ "manage-account-links" ]
          }
        },
        "clientRole" : true,
        "containerId" : "b40253a2-dbb9-40ee-ac7c-1350856af37c",
        "attributes" : { }
      }, {
        "id" : "c737b3e0-0f78-4c99-8280-b694af2dbcab",
        "name" : "view-consent",
        "description" : "${role_view-consent}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "b40253a2-dbb9-40ee-ac7c-1350856af37c",
        "attributes" : { }
      }, {
        "id" : "556b922a-f9c8-41c6-8a9a-347b71ab72d8",
        "name" : "manage-consent",
        "description" : "${role_manage-consent}",
        "composite" : true,
        "composites" : {
          "client" : {
            "account" : [ "view-consent" ]
          }
        },
        "clientRole" : true,
        "containerId" : "b40253a2-dbb9-40ee-ac7c-1350856af37c",
        "attributes" : { }
      } ],
      "frontend" : [ ]
    }
  },
  "groups" : [ ],
  "defaultRole" : {
    "id" : "5e1f0bc4-a146-4ec9-9c38-72323913e831",
    "name" : "default-roles-usager",
    "description" : "${role_default-roles}",
    "composite" : true,
    "clientRole" : false,
    "containerId" : "4c3a8224-5db2-42f0-a8cc-cba46cd01bb4"
  },
  "requiredCredentials" : [ "password" ],
  "otpPolicyType" : "totp",
  "otpPolicyAlgorithm" : "HmacSHA1",
  "otpPolicyInitialCounter" : 0,
  "otpPolicyDigits" : 6,
  "otpPolicyLookAheadWindow" : 1,
  "otpPolicyPeriod" : 30,
  "otpSupportedApplications" : [ "FreeOTP", "Google Authenticator" ],
  "webAuthnPolicyRpEntityName" : "keycloak",
  "webAuthnPolicySignatureAlgorithms" : [ "ES256" ],
  "webAuthnPolicyRpId" : "",
  "webAuthnPolicyAttestationConveyancePreference" : "not specified",
  "webAuthnPolicyAuthenticatorAttachment" : "not specified",
  "webAuthnPolicyRequireResidentKey" : "not specified",
  "webAuthnPolicyUserVerificationRequirement" : "not specified",
  "webAuthnPolicyCreateTimeout" : 0,
  "webAuthnPolicyAvoidSameAuthenticatorRegister" : false,
  "webAuthnPolicyAcceptableAaguids" : [ ],
  "webAuthnPolicyPasswordlessRpEntityName" : "keycloak",
  "webAuthnPolicyPasswordlessSignatureAlgorithms" : [ "ES256" ],
  "webAuthnPolicyPasswordlessRpId" : "",
  "webAuthnPolicyPasswordlessAttestationConveyancePreference" : "not specified",
  "webAuthnPolicyPasswordlessAuthenticatorAttachment" : "not specified",
  "webAuthnPolicyPasswordlessRequireResidentKey" : "not specified",
  "webAuthnPolicyPasswordlessUserVerificationRequirement" : "not specified",
  "webAuthnPolicyPasswordlessCreateTimeout" : 0,
  "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister" : false,
  "webAuthnPolicyPasswordlessAcceptableAaguids" : [ ],
  "users" : [ {
    "id" : "ca067118-c38f-484d-93bf-77a44e3ee15b",
    "username" : "isme2473",
    "enabled" : true,
    "totp" : false,
    "emailVerified" : false,
    "firstName" : "Elyes",
    "lastName" : "Ismail",
    "email" : "isme2473@usherbrooke.ca",
    "attributes" : {
      "programme" : [ "GI" ],
      "session" : [ "S1" ],
      "profile" : [ "TI" ]
    },
    "credentials" : [ {
      "id" : "a366cb69-abcb-4ab8-9337-c9d40439d5e0",
      "type" : "password",
      "createdDate" : 1758806848448,
      "secretData" : "{\"value\":\"cbLnBYnP0fy0++OJOhjRsEpWoHKi87Hi5TPX/5qvg7umB2Xn8d+Zx/HgJlBh9lu8eAxK5lOKMuuMoqYcEJLXsw==\",\"salt\":\"hr5FxZr9gGAuZBbBPAFWiQ==\",\"additionalParameters\":{}}",
      "credentialData" : "{\"hashIterations\":27500,\"algorithm\":\"pbkdf2-sha256\",\"additionalParameters\":{}}"
    } ],
    "disableableCredentialTypes" : [ ],
    "requiredActions" : [ ],
    "realmRoles" : [ "default-roles-usager", "student" ],
    "notBefore" : 0,
    "groups" : [ ]
  }, {
    "id" : "1dceb44b-038b-4b91-8d99-dbdf99e8bb60",
    "createdTimestamp" : 1758806847485,
    "username" : "service-account-backend",
    "enabled" : true,
    "totp" : false,
    "emailVerified" : false,
    "serviceAccountClientId" : "backend",
    "credentials" : [ ],
    "disableableCredentialTypes" : [ ],
    "requiredActions" : [ ],
    "realmRoles" : [ "default-roles-usager" ],
    "notBefore" : 0,
    "groups" : [ ]
  } ],
  "scopeMappings" : [ {
    "clientScope" : "offline_access",
    "roles" : [ "offline_access" ]
  } ],
  "clientScopeMappings" : {
    "account" : [ {
      "client" : "account-console",
      "roles" : [ "manage-account" ]
    } ]
  },
  "clients" : [ {
    "id" : "b40253a2-dbb9-40ee-ac7c-1350856af37c",
    "clientId" : "account",
    "name" : "${client_account}",
    "rootUrl" : "${authBaseUrl}",
    "baseUrl" : "/realms/usager/account/",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ "/realms/usager/account/*" ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "post.logout.redirect.uris" : "+"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "defaultClientScopes" : [ "web-origins", "acr", "profile", "roles", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "7c4066cd-9143-40f6-a46f-74337c9118e6",
    "clientId" : "account-console",
    "name" : "${client_account-console}",
    "rootUrl" : "${authBaseUrl}",
    "baseUrl" : "/realms/usager/account/",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ "/realms/usager/account/*" ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "post.logout.redirect.uris" : "+",
      "pkce.code.challenge.method" : "S256"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "protocolMappers" : [ {
      "id" : "2d17193c-8c1c-4bb8-8ec6-72c0803f8ccd",
      "name" : "audience resolve",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-audience-resolve-mapper",
      "consentRequired" : false,
      "config" : { }
    } ],
    "defaultClientScopes" : [ "web-origins", "acr", "profile", "roles", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "afd9c8ae-4704-49b7-ad19-382c20572d6e",
    "clientId" : "admin-cli",
    "name" : "${client_admin-cli}",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : false,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : true,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : { },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "defaultClientScopes" : [ "web-origins", "acr", "profile", "roles", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "b025a9d1-1457-49c7-9642-7c2dfd01ad7f",
    "clientId" : "backend",
    "name" : "Autorisation de connection à un service web",
    "rootUrl" : "http://localhost:8180",
    "adminUrl" : "",
    "baseUrl" : "/",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "secret" : "secretsecretsecretsecretsecretsecret",
    "redirectUris" : [ "*" ],
    "webOrigins" : [ "*" ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : true,
    "serviceAccountsEnabled" : true,
    "publicClient" : false,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "id.token.as.detached.signature" : "false",
      "saml.assertion.signature" : "false",
      "saml.force.post.binding" : "false",
      "saml.multivalued.roles" : "false",
      "saml.encrypt" : "false",
      "oauth2.device.authorization.grant.enabled" : "false",
      "backchannel.logout.revoke.offline.tokens" : "false",
      "saml.server.signature" : "false",
      "saml.server.signature.keyinfo.ext" : "false",
      "use.refresh.tokens" : "true",
      "exclude.session.state.from.auth.response" : "false",
      "oidc.ciba.grant.enabled" : "false",
      "saml.artifact.binding" : "false",
      "backchannel.logout.session.required" : "true",
      "client_credentials.use_refresh_token" : "false",
      "saml_force_name_id_format" : "false",
      "require.pushed.authorization.requests" : "false",
      "saml.client.signature" : "false",
      "tls.client.certificate.bound.access.tokens" : "false",
      "saml.authnstatement" : "false",
      "display.on.consent.screen" : "false",
      "saml.onetimeuse.condition" : "false"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : true,
    "nodeReRegistrationTimeout" : -1,
    "protocolMappers" : [ {
      "id" : "2d6eae6d-5208-4623-99b8-7d3fcf7331e7",
      "name" : "Client Host",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usersessionmodel-note-mapper",
      "consentRequired" : false,
      "config" : {
        "user.session.note" : "clientHost",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "clientHost",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "e2f092e8-94dd-4902-8a7f-3c7703ed1121",
      "name" : "programme",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "aggregate.attrs" : "false",
        "multivalued" : "false",
        "userinfo.token.claim" : "true",
        "user.attribute" : "programme",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "programme"
      }
    }, {
      "id" : "2b345f2e-7284-4204-a13b-eeba26b7a078",
      "name" : "profile",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "aggregate.attrs" : "false",
        "multivalued" : "false",
        "userinfo.token.claim" : "true",
        "user.attribute" : "profile",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "profile"
      }
    }, {
      "id" : "ad5682b9-0ab7-4792-af93-a707e12adb50",
      "name" : "Client ID",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usersessionmodel-note-mapper",
      "consentRequired" : false,
      "config" : {
        "user.session.note" : "clientId",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "clientId",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "e79f747a-5bcf-4f23-9f54-55f88a32482d",
      "name" : "Client IP Address",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usersessionmodel-note-mapper",
      "consentRequired" : false,
      "config" : {
        "user.session.note" : "clientAddress",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "clientAddress",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "f3af8531-c12b-4279-8b1d-6adbe44eb620",
      "name" : "session",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "aggregate.attrs" : "false",
        "multivalued" : "false",
        "userinfo.token.claim" : "true",
        "user.attribute" : "session",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "session"
      }
    } ],
    "defaultClientScopes" : [ "web-origins", "acr", "profile", "roles", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "fcc477a2-ea6a-4a81-b26a-1f25d28303d7",
    "clientId" : "broker",
    "name" : "${client_broker}",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : true,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : false,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : { },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "defaultClientScopes" : [ "web-origins", "acr", "profile", "roles", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "1768095c-ea22-4c84-8699-72833a618ad4",
    "clientId" : "frontend",
    "name" : "Authorisation de connection à une page web",
    "rootUrl" : "http://localhost:8180",
    "adminUrl" : "",
    "baseUrl" : "/",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "secret" : "secret",
    "redirectUris" : [ "*" ],
    "webOrigins" : [ "*" ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : true,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "id.token.as.detached.signature" : "false",
      "saml.assertion.signature" : "false",
      "saml.force.post.binding" : "false",
      "saml.multivalued.roles" : "false",
      "saml.encrypt" : "false",
      "oauth2.device.authorization.grant.enabled" : "false",
      "backchannel.logout.revoke.offline.tokens" : "false",
      "saml.server.signature" : "false",
      "saml.server.signature.keyinfo.ext" : "false",
      "use.refresh.tokens" : "true",
      "exclude.session.state.from.auth.response" : "false",
      "oidc.ciba.grant.enabled" : "false",
      "saml.artifact.binding" : "false",
      "backchannel.logout.session.required" : "true",
      "client_credentials.use_refresh_token" : "false",
      "saml_force_name_id_format" : "false",
      "require.pushed.authorization.requests" : "false",
      "saml.client.signature" : "false",
      "tls.client.certificate.bound.access.tokens" : "false",
      "saml.authnstatement" : "false",
      "display.on.consent.screen" : "false",
      "saml.onetimeuse.condition" : "false"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : true,
    "nodeReRegistrationTimeout" : -1,
    "protocolMappers" : [ {
      "id" : "20604507-bde5-4127-9df8-72c851d17122",
      "name" : "programme",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "aggregate.attrs" : "false",
        "multivalued" : "false",
        "userinfo.token.claim" : "true",
        "user.attribute" : "programme",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "programme"
      }
    }, {
      "id" : "f8afe2d8-0ccc-4ef5-8321-47802f71f03c",
      "name" : "profile",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "aggregate.attrs" : "false",
        "multivalued" : "false",
        "userinfo.token.claim" : "true",
        "user.attribute" : "profile",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "profile"
      }
    }, {
      "id" : "4ca78f0c-3390-4958-aa59-fa02c0909f30",
      "name" : "session",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "aggregate.attrs" : "false",
        "multivalued" : "false",
        "userinfo.token.claim" : "true",
        "user.attribute" : "session",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "session"
      }
    } ],
    "defaultClientScopes" : [ "web-origins", "profile", "roles", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "69623140-af55-4d68-99c1-8f6a92eec086",
    "clientId" : "realm-management",
    "name" : "${client_realm-management}",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : true,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : false,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : { },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "defaultClientScopes" : [ "web-origins", "acr", "profile", "roles", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "ec8fb671-0d5f-46f3-8763-88bfaa1cbc0b",
    "clientId" : "security-admin-console",
    "name" : "${client_security-admin-console}",
    "rootUrl" : "${authAdminUrl}",
    "baseUrl" : "/admin/usager/console/",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ "/admin/usager/console/*" ],
    "webOrigins" : [ "+" ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "post.logout.redirect.uris" : "+",
      "pkce.code.challenge.method" : "S256"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "protocolMappers" : [ {
      "id" : "7cadd55d-5679-4bc5-a26b-bf5c82fae5a9",
      "name" : "locale",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "locale",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "locale",
        "jsonType.label" : "String"
      }
    } ],
    "defaultClientScopes" : [ "web-origins", "acr", "profile", "roles", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  } ],
  "clientScopes" : [ {
    "id" : "90a24e1f-191b-4a2d-adb5-e970f809aeb8",
    "name" : "microprofile-jwt",
    "description" : "Microprofile - JWT built-in scope",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "display.on.consent.screen" : "false"
    },
    "protocolMappers" : [ {
      "id" : "625bfba2-04fa-46a4-ad17-ad08dbb9e443",
      "name" : "groups",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-realm-role-mapper",
      "consentRequired" : false,
      "config" : {
        "multivalued" : "true",
        "user.attribute" : "foo",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "groups",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "010c18f1-0f0e-482d-bbe5-365f95553ed0",
      "name" : "upn",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-property-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "username",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "upn",
        "jsonType.label" : "String"
      }
    } ]
  }, {
    "id" : "71cb6465-bbf7-4247-9a16-00d51abe057f",
    "name" : "offline_access",
    "description" : "OpenID Connect built-in scope: offline_access",
    "protocol" : "openid-connect",
    "attributes" : {
      "consent.screen.text" : "${offlineAccessScopeConsentText}",
      "display.on.consent.screen" : "true"
    }
  }, {
    "id" : "59ba1f4d-439c-4b6d-b0bd-575b456865fc",
    "name" : "phone",
    "description" : "OpenID Connect built-in scope: phone",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "display.on.consent.screen" : "true",
      "consent.screen.text" : "${phoneScopeConsentText}"
    },
    "protocolMappers" : [ {
      "id" : "5c82986f-5a51-4fb1-bb29-a2f27522cd49",
      "name" : "phone number",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "phoneNumber",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "phone_number",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "96022970-a555-433b-9a87-385d1e5350b3",
      "name" : "phone number verified",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "phoneNumberVerified",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "phone_number_verified",
        "jsonType.label" : "boolean"
      }
    } ]
  }, {
    "id" : "a486b623-dd0d-4fc3-9599-24a6f251dc00",
    "name" : "address",
    "description" : "OpenID Connect built-in scope: address",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "display.on.consent.screen" : "true",
      "consent.screen.text" : "${addressScopeConsentText}"
    },
    "protocolMappers" : [ {
      "id" : "a73cf7c7-0786-4370-9ec1-0031a8622e9d",
      "name" : "address",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-address-mapper",
      "consentRequired" : false,
      "config" : {
        "user.attribute.formatted" : "formatted",
        "user.attribute.country" : "country",
        "user.attribute.postal_code" : "postal_code",
        "userinfo.token.claim" : "true",
        "user.attribute.street" : "street",
        "id.token.claim" : "true",
        "user.attribute.region" : "region",
        "access.token.claim" : "true",
        "user.attribute.locality" : "locality"
      }
    } ]
  }, {
    "id" : "d26312c5-1d38-402f-9561-b6ecea19d530",
    "name" : "profile",
    "description" : "OpenID Connect built-in scope: profile",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "display.on.consent.screen" : "true",
      "consent.screen.text" : "${profileScopeConsentText}"
    },
    "protocolMappers" : [ {
      "id" : "33dc8fac-8af1-4c93-a4b1-3d1af0d8d59f",
      "name" : "locale",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "locale",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "locale",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "2a384f3c-c816-4d78-bb99-85013508f1ef",
      "name" : "updated at",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "updatedAt",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "updated_at",
        "jsonType.label" : "long"
      }
    }, {
      "id" : "6c5bce55-5dd7-40cd-9274-89496a2bdd36",
      "name" : "gender",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "gender",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "gender",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "63f6aa1f-af2e-479b-a0a5-029eee6e3bc1",
      "name" : "zoneinfo",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "zoneinfo",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "zoneinfo",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "a03ae306-9ffb-4d44-9153-3cd1197cfa45",
      "name" : "birthdate",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "birthdate",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "birthdate",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "e64030b2-d399-4a08-a1b7-7996036be345",
      "name" : "website",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "website",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "website",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "8687fa44-f43e-49fa-b984-7283fe8e8846",
      "name" : "family name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-property-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "lastName",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "family_name",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "0f1cba38-2429-47c5-ad0a-b7f1fcb43138",
      "name" : "given name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-property-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "firstName",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "given_name",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "53e749e8-72c2-48f5-87ea-26d5d314c155",
      "name" : "middle name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "middleName",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "middle_name",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "ff479630-0a32-41f1-a2b0-79954f935763",
      "name" : "full name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-full-name-mapper",
      "consentRequired" : false,
      "config" : {
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "userinfo.token.claim" : "true"
      }
    }, {
      "id" : "c6eebef2-fdd6-418e-970d-fdc4cf771f8b",
      "name" : "picture",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "picture",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "picture",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "ae3e1994-6e58-46f6-b13f-ccabcbf4ab14",
      "name" : "nickname",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "nickname",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "nickname",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "2ee167bd-9fe6-45eb-9c8b-948f920f0f5c",
      "name" : "profile",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "profile",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "profile",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "ccd8a6ef-96bf-4cd8-a456-0a58e389e5db",
      "name" : "username",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-property-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "username",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "preferred_username",
        "jsonType.label" : "String"
      }
    } ]
  }, {
    "id" : "7665a1d2-7cfd-422b-840c-a0cda81b3e62",
    "name" : "web-origins",
    "description" : "OpenID Connect scope for add allowed web origins to the access token",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "false",
      "display.on.consent.screen" : "false",
      "consent.screen.text" : ""
    },
    "protocolMappers" : [ {
      "id" : "8f8a7868-a6f8-4b55-acf6-ba1b3cf6365e",
      "name" : "allowed web origins",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-allowed-origins-mapper",
      "consentRequired" : false,
      "config" : { }
    } ]
  }, {
    "id" : "07e82bcd-a115-4b61-b087-9c0375fbc04c",
    "name" : "email",
    "description" : "OpenID Connect built-in scope: email",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "display.on.consent.screen" : "true",
      "consent.screen.text" : "${emailScopeConsentText}"
    },
    "protocolMappers" : [ {
      "id" : "78854e20-03f4-4560-a55b-7a878ccbe587",
      "name" : "email verified",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-property-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "emailVerified",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "email_verified",
        "jsonType.label" : "boolean"
      }
    }, {
      "id" : "f44c664e-39e3-45d6-ba23-f899788085de",
      "name" : "email",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-property-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "email",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "email",
        "jsonType.label" : "String"
      }
    } ]
  }, {
    "id" : "4cfd1305-c201-4a01-8ac7-0b2fad9f7993",
    "name" : "role_list",
    "description" : "SAML role list",
    "protocol" : "saml",
    "attributes" : {
      "consent.screen.text" : "${samlRoleListScopeConsentText}",
      "display.on.consent.screen" : "true"
    },
    "protocolMappers" : [ {
      "id" : "3057e159-0fcb-4095-9c9c-d44c628ed2bd",
      "name" : "role list",
      "protocol" : "saml",
      "protocolMapper" : "saml-role-list-mapper",
      "consentRequired" : false,
      "config" : {
        "single" : "false",
        "attribute.nameformat" : "Basic",
        "attribute.name" : "Role"
      }
    } ]
  }, {
    "id" : "f336543a-e0a9-481b-95fc-b0c582b621eb",
    "name" : "acr",
    "description" : "OpenID Connect scope for add acr (authentication context class reference) to the token",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "false",
      "display.on.consent.screen" : "false"
    },
    "protocolMappers" : [ {
      "id" : "9794a90e-0bb2-4945-8ede-da2c20bbf046",
      "name" : "acr loa level",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-acr-mapper",
      "consentRequired" : false,
      "config" : {
        "id.token.claim" : "true",
        "access.token.claim" : "true"
      }
    } ]
  }, {
    "id" : "43c77e80-9d3e-4e38-a2ec-166328325c51",
    "name" : "roles",
    "description" : "OpenID Connect scope for add user roles to the access token",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "false",
      "display.on.consent.screen" : "true",
      "consent.screen.text" : "${rolesScopeConsentText}"
    },
    "protocolMappers" : [ {
      "id" : "b6ee445a-132a-4996-8cf1-7287fd19b3e0",
      "name" : "client roles",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-client-role-mapper",
      "consentRequired" : false,
      "config" : {
        "user.attribute" : "foo",
        "access.token.claim" : "true",
        "claim.name" : "resource_access.${client_id}.roles",
        "jsonType.label" : "String",
        "multivalued" : "true"
      }
    }, {
      "id" : "8274776b-32cf-4780-9fd6-9ed07dd19eeb",
      "name" : "audience resolve",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-audience-resolve-mapper",
      "consentRequired" : false,
      "config" : { }
    }, {
      "id" : "ae23926e-b5a8-47e9-9f1e-3cd7512fa124",
      "name" : "realm roles",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-realm-role-mapper",
      "consentRequired" : false,
      "config" : {
        "user.attribute" : "foo",
        "access.token.claim" : "true",
        "claim.name" : "realm_access.roles",
        "jsonType.label" : "String",
        "multivalued" : "true"
      }
    } ]
  } ],
  "defaultDefaultClientScopes" : [ "email", "roles", "role_list", "web-origins", "profile", "acr" ],
  "defaultOptionalClientScopes" : [ "phone", "offline_access", "microprofile-jwt", "address" ],
  "browserSecurityHeaders" : {
    "contentSecurityPolicyReportOnly" : "",
    "xContentTypeOptions" : "nosniff",
    "xRobotsTag" : "none",
    "xFrameOptions" : "SAMEORIGIN",
    "contentSecurityPolicy" : "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
    "xXSSProtection" : "1; mode=block",
    "strictTransportSecurity" : "max-age=31536000; includeSubDomains"
  },
  "smtpServer" : { },
  "eventsEnabled" : false,
  "eventsListeners" : [ "jboss-logging" ],
  "enabledEventTypes" : [ ],
  "adminEventsEnabled" : false,
  "adminEventsDetailsEnabled" : false,
  "identityProviders" : [ ],
  "identityProviderMappers" : [ ],
  "components" : {
    "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy" : [ {
      "id" : "5d033bc1-f565-48a4-bf53-fcb4cdfc9283",
      "name" : "Consent Required",
      "providerId" : "consent-required",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : { }
    }, {
      "id" : "e5755f34-5f89-4a8e-8d08-88183925f6e7",
      "name" : "Allowed Client Scopes",
      "providerId" : "allowed-client-templates",
      "subType" : "authenticated",
      "subComponents" : { },
      "config" : {
        "allow-default-scopes" : [ "true" ]
      }
    }, {
      "id" : "627bdef9-767d-4b15-a55f-673e936bc411",
      "name" : "Max Clients Limit",
      "providerId" : "max-clients",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : {
        "max-clients" : [ "200" ]
      }
    }, {
      "id" : "4030ad9b-32f9-4d3d-845f-bccac90da661",
      "name" : "Allowed Protocol Mapper Types",
      "providerId" : "allowed-protocol-mappers",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : {
        "allowed-protocol-mapper-types" : [ "oidc-usermodel-property-mapper", "oidc-sha256-pairwise-sub-mapper", "oidc-usermodel-attribute-mapper", "saml-user-property-mapper", "oidc-full-name-mapper", "saml-role-list-mapper", "saml-user-attribute-mapper", "oidc-address-mapper" ]
      }
    }, {
      "id" : "57953506-ee99-4c92-ae4a-5de5ec34ef5b",
      "name" : "Allowed Client Scopes",
      "providerId" : "allowed-client-templates",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : {
        "allow-default-scopes" : [ "true" ]
      }
    }, {
      "id" : "f48e5144-503c-4894-b5a0-5df78f85cb20",
      "name" : "Full Scope Disabled",
      "providerId" : "scope",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : { }
    }, {
      "id" : "b8ebfe0a-33f7-46f7-8e24-81f6b8c5da53",
      "name" : "Trusted Hosts",
      "providerId" : "trusted-hosts",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : {
        "host-sending-registration-request-must-match" : [ "true" ],
        "client-uris-must-match" : [ "true" ]
      }
    }, {
      "id" : "60484ec6-d4b3-43bc-bcf1-b026d77adc62",
      "name" : "Allowed Protocol Mapper Types",
      "providerId" : "allowed-protocol-mappers",
      "subType" : "authenticated",
      "subComponents" : { },
      "config" : {
        "allowed-protocol-mapper-types" : [ "oidc-usermodel-property-mapper", "saml-role-list-mapper", "saml-user-property-mapper", "oidc-address-mapper", "oidc-sha256-pairwise-sub-mapper", "oidc-usermodel-attribute-mapper", "saml-user-attribute-mapper", "oidc-full-name-mapper" ]
      }
    } ],
    "org.keycloak.keys.KeyProvider" : [ {
      "id" : "8787e9cc-f89f-4b60-a2be-81c2d064d0cb",
      "name" : "aes-generated",
      "providerId" : "aes-generated",
      "subComponents" : { },
      "config" : {
        "kid" : [ "434bbbf1-13c8-40b5-9e7e-1e999990f38b" ],
        "secret" : [ "XOicxNhdI_F2xALeWuOcrw" ],
        "priority" : [ "100" ]
      }
    }, {
      "id" : "121a04ec-20cb-4ee6-ba56-2222de531b22",
      "name" : "rsa-generated",
      "providerId" : "rsa-generated",
      "subComponents" : { },
      "config" : {
        "privateKey" : [ "MIIEpQIBAAKCAQEAnvCChrryMbhwhtxebARHkTMu4YKlXF7wCHhifQF2Sef4EBluZYDdWkTQjxRTcXjzj0mvs40lzM7iafmRkC7JcGQzqMz1nwZ6RSuVo6GB/Wbst1aFx299XdxcuG+lDBUhnWqFe315VM8odarRMUdt2EsWt8BgdRiSx8p/lga/S9U3oZgkOKFKtxzhHjU8nCRyGW82/9rzMXyKBMSWQ+yBto1vBRDOr/fxewjCai42A25FhFS72vnV31zFgPLkmwM/m8VW1DhCT8JZU+T1v7IW3KqItr211eszGeUCsRMA1M5EpDK5x5yFcTS0xIVTrs/Lmo9VoCLBO23z7dtE9xtGKwIDAQABAoIBAEB7uakp3as4dkbwz0oprlOFnYaWt7ozNlVpaiPnXPN9LpJxju2Vi7jc5HS4PWZzOPWwYp2JLYXbhdaTD3Cc2tNDhAX/KcPcH+1CUpKxqwiBIpb7fok8fXOAPQoDGcY+KIYyOnewn3I+Hd8nb3n7zeAMDup8HWZEkwCF8p+OmzwLYHg8GbnDo9dVSJ2UT3UiuZbL9BvqTq+BQKxo3PckU29f/c09WHcARzERWiQHR9hG9/WRI8eKjWO24MAfsaXaFGviY0LYzcQ/GbDoga+wa9/Hk6MVkOfWzGRCOaaQ9YIwdh7zOLFZ0WQVBQsiIIPaFgGWqSazlC1fWd0qIJn+AGkCgYEA1V2kk11yR9F77LPDZHULzxx0af9OOLwIcCitC1b8NyZrSohRAZ8AkTkc2SxNs5WCalfGF5V+P38pVBq0p8rw49ZKRB1ff6loY/wc8KbI5xBn8ea9CGb9x+40rEf8Nb5K5d/xy7Hfs1Rv5f9BVKX4xTK33P/0Thd5iLlVrySaW1cCgYEAvrLIsUtbPxAYyS12Hmxql9zf5C2YZsEhaeahJxUr4h7znj3FUhzjZ9TZjtwPyM4UD4HGJ1TWF3dLya3LYJDqFO26UXygFXNS9ZpPJ0PtjWtFwymb3znDo+1rF/IefEMBL7rLrG0AUNjlkhpRbkR62Pbjgj2aPxnyNjAt/dete00CgYEAmSzd/rGCXo7EgbzYFGF29dv+sy4HMPHEuQhqmo57CPi648oTJa/Jj3hJ/pswuTEnbELRQpMfDGS0/d0iPqeR4m8v59CSg6rR953CBP4nksKTbPVyVfriTEr1Y41WQhr32Cm6g7qR10NSBfMHKsbwXlm355+U+w8dQAuVuOP1MIcCgYEApH4tVZmN7NjiuG4pjFayn6pbykR2SHRhcSsKaV7+yn8uX5oi4hCfLApTW8KBLxJsBXBIz9aDEhzKV/49B2AZOtJRPEcHA1nF/qsLifAzMiCNPapflO8LzhRWo4IrP77AgD5dv68KbbKaXCutgDM70HkuiELBEZs87fcjROpM76UCgYEAgT00uLDisne3o6AWnea1rBLJmMUqpG5ro0jQ6R4ytsPMDYGEyuB+Q8Mzq5VARaeZaiZnsbPt7ZufdJJjlq/JnZm2ekN7N4Xea/GLcJXGykE5HWBwjWubLucZPzt/8lON1SdHILMFKHTz8HjnXNBMHuUb0jFl71PKkDXIanHEYNw=" ],
        "keyUse" : [ "SIG" ],
        "certificate" : [ "MIICmzCCAYMCBgGZgQ6mVjANBgkqhkiG9w0BAQsFADARMQ8wDQYDVQQDDAZ1c2FnZXIwHhcNMjUwOTI1MTMyNTQ1WhcNMzUwOTI1MTMyNzI1WjARMQ8wDQYDVQQDDAZ1c2FnZXIwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCe8IKGuvIxuHCG3F5sBEeRMy7hgqVcXvAIeGJ9AXZJ5/gQGW5lgN1aRNCPFFNxePOPSa+zjSXMzuJp+ZGQLslwZDOozPWfBnpFK5WjoYH9Zuy3VoXHb31d3Fy4b6UMFSGdaoV7fXlUzyh1qtExR23YSxa3wGB1GJLHyn+WBr9L1TehmCQ4oUq3HOEeNTycJHIZbzb/2vMxfIoExJZD7IG2jW8FEM6v9/F7CMJqLjYDbkWEVLva+dXfXMWA8uSbAz+bxVbUOEJPwllT5PW/shbcqoi2vbXV6zMZ5QKxEwDUzkSkMrnHnIVxNLTEhVOuz8uaj1WgIsE7bfPt20T3G0YrAgMBAAEwDQYJKoZIhvcNAQELBQADggEBAGu//8gw1YpeffDmqDydY0Cf/LmWSFy+YEU4q4hGYssCrizObCY4YqE3slhHxVgFxijyISUSOr9us63wBYKVcVzxL82wgmV1BiGYARZS/gNbBxlQYvAQO3QVKbFMMuROjWqoc6mWTmfJxNiwdGyR4sJpH9dRSgwglEXosTVs2Tf6dwOCdwIPXtoaxsuOQtsc0b/JHwG3pHpJUjOwc2fjS9pRMcxreiFrgpP+hdNM34NqLxLYkk8yVdzVYmjNrUD5MOHorQ99h0cya31UpwIJs33O62PHA6YCJpaW0sOqLqkKPZKZQItf1G2SHRt+QNuD3wUnLK6fx4vi6y1YdZ+2K24=" ],
        "priority" : [ "100" ]
      }
    }, {
      "id" : "d52aa598-a966-42bf-9082-a03b8691819e",
      "name" : "rsa-enc-generated",
      "providerId" : "rsa-enc-generated",
      "subComponents" : { },
      "config" : {
        "privateKey" : [ "MIIEowIBAAKCAQEAuFi/VH7Osp9lqBLdUSQwiEoI1PLEdWU5/ES+jeq2+9uS95eyD80x93QNvDXur+gl3VMR8JO1ekSTLD70CEILJv4wZGw8Xy0UkLIQ0hhwTwsKfk149+QcD3qH58TIuNWV0vvz86PnFzhRRbFx4VStZ+3Y7q09OrmIGmmXrnbRJ6kmcHc1JN8I3BV6fA4CQQig1S+uf30nq02AQrowlYWHR/FoInAyvT8MyejciE4I7sywZM/wqT7UaGmUUzvU/gZAGdk32ExUIIy/cu0IgqpVYpKrAWcfMcN05M2jnXxDscVuJ2M5DksxEKB8bvFEDQ3yt0zj1Q2BvYWM/QJEq29O4QIDAQABAoIBAAnUmw4KSG3TEoyLcPzo5U5R8GBMD+OYwdECPiJ67/DErUosbzo+KC94zgYJiZByMe64WtO4ShcFPXnrDiq7PDVYnG5b1+kAEkGDFWLhcGpuqCEYct55Q3EkiMcjFyHFgLIEbeZss5/pM2r4LZ6lXC1CIZgyFHqjYS7TZFt735HHRqVG5EsOKvP/Ix/x413YbAXwXuXiV6ol6dXyVCx8dwdJGVY0SkMCjPQtHSzmxkD7y8/vSlyYU/MTM+sb16h0YkbXHC1TUGcdX8+8hWmUsfeGiIknYTSrkqxz5J/UV5fGkvYiE+SFb5qELE29E5SIIDGXvjVEdsS1PI9X40FjQccCgYEA7YoSCFJ+4XU3HIyVwEFBwHoaG8Big5GIMChuPOsMssdpIkWTdK5aNs5UMwlqPFZARk9fUHD3sF8jo2b/9DumsM8Iqw+DB4EBeOpjmFAoYboaovuiFHenNupeMhVcCZJgvT90rzBuHvFBBBE+VdydglbUjDks7n+qBMo3Zt++IpcCgYEAxqxj0JcnsGGf4xynB7ka6sejRum+MdeO7/u27RMc8qajTkbPf6m5PfImmeRe3Jgz93D1o+DphdI55E0A9vHcfAwk/q6fyTEV7s6jW7Q3DJV48UbPgK6NiUQlNc29vyym1/6f4JatGC50X0J1VvFB4jegBbBpW0cJuLipl0u74UcCgYEAxCw+8DiRKMmRFjbUhc5e6wLsBPdBZL8P5hW91PmZpxwgq3kiaj6DqreDuhKQdfwVYPu0D877/+DSoeQyhhWteF/DHOLWp5/XA3Evh17Lusnjra57EMQwiJ3N5TbWp+EHm8OILhalG1DLDPzgqjBktHvZVWTywpUUaJhIYOFvOUkCgYBwS3JjrXxWeue3pDNY7yyitdK5O1cwrulxBfLgT6RWFxBJJ0cTnqhAtkVRSL7Bqxn8a5G8Xl1AMZJdU5UO/6gjSW4DskpImwENqSi2pcdTyozAu8h/sKn5g1YQ8kik7SUlAxv1AtW1zFQkn9jZGqalqdE+RfdXC3EYQvBAvyLj8wKBgFnilqUZlORgKAEBISVwbQWHvh6uTcI+Y1v/bFjEpSUq6mwKEIRDwm4KVvDj59ZjHEfIzoPCTq8Q6oAexZh415YJyij4So/oK07KsE3on6OZSJFIeS2AOZ1Xm/U8zF7tN8JP+sLSshaU9G6oRnb3rpfqa0F7GJabQS+/uMxJXCnE" ],
        "keyUse" : [ "ENC" ],
        "certificate" : [ "MIICmzCCAYMCBgGZgQ6nUzANBgkqhkiG9w0BAQsFADARMQ8wDQYDVQQDDAZ1c2FnZXIwHhcNMjUwOTI1MTMyNTQ1WhcNMzUwOTI1MTMyNzI1WjARMQ8wDQYDVQQDDAZ1c2FnZXIwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQC4WL9Ufs6yn2WoEt1RJDCISgjU8sR1ZTn8RL6N6rb725L3l7IPzTH3dA28Ne6v6CXdUxHwk7V6RJMsPvQIQgsm/jBkbDxfLRSQshDSGHBPCwp+TXj35BwPeofnxMi41ZXS+/Pzo+cXOFFFsXHhVK1n7djurT06uYgaaZeudtEnqSZwdzUk3wjcFXp8DgJBCKDVL65/fSerTYBCujCVhYdH8WgicDK9PwzJ6NyITgjuzLBkz/CpPtRoaZRTO9T+BkAZ2TfYTFQgjL9y7QiCqlVikqsBZx8xw3TkzaOdfEOxxW4nYzkOSzEQoHxu8UQNDfK3TOPVDYG9hYz9AkSrb07hAgMBAAEwDQYJKoZIhvcNAQELBQADggEBAI4cYa8SNpe8yj9AMv9fuqrBMTUxmDM6q1oca3gSEUnwM5K4O+ZnvJqiqSVSjWHV4yxx+zZ/f2SaDcKIhkVYZJUwTkVC9ep+5PPkGvXYySWJymKh/2bzzEg52G05CLucJE4T5YtXGaKZtA7/7Xh93cOx8qrmWaE4bWX4hMK+bfr4gDi2KYzyB89LnauWnkUWG8A4CymUUg46s1iK1NKsmtI4jkVocpsT44JOE21iEHctoZny9w4m7c0s7u6ZcYdsm7NT5AGska6J714IVZMj+4rONkqpu9n3Zk5dL2CERcbGIJ5F/PQEFK2uITLpVLxy8lRszeT+3YxDCsobSh4ZVcs=" ],
        "priority" : [ "100" ],
        "algorithm" : [ "RSA-OAEP" ]
      }
    }, {
      "id" : "2c6e793b-605f-4f1b-863f-0925209baad1",
      "name" : "hmac-generated",
      "providerId" : "hmac-generated",
      "subComponents" : { },
      "config" : {
        "kid" : [ "b835928c-9616-401e-b9a0-ae2066aefd3e" ],
        "secret" : [ "6KDuxXhg7NA56qRi_8lnicLAsNV4EnpIDVVMC8qFhVortJcV_bH8s7v1AFUPtx4XUs9OJs2mIxoEqhZ1vMYG4Q" ],
        "priority" : [ "100" ],
        "algorithm" : [ "HS256" ]
      }
    } ]
  },
  "internationalizationEnabled" : false,
  "supportedLocales" : [ ],
  "authenticationFlows" : [ {
    "id" : "6f5097ca-e0e2-4aff-8fbe-3e7c5e16ebf3",
    "alias" : "Account verification options",
    "description" : "Method with which to verity the existing account",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "idp-email-verification",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "ALTERNATIVE",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "Verify Existing Account by Re-authentication",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "1eeab4fc-6b0c-472e-b81d-6bec059be2d7",
    "alias" : "Authentication Options",
    "description" : "Authentication options.",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "basic-auth",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "basic-auth-otp",
      "authenticatorFlow" : false,
      "requirement" : "DISABLED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "auth-spnego",
      "authenticatorFlow" : false,
      "requirement" : "DISABLED",
      "priority" : 30,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "07c6b033-4686-43d2-9a5a-6d2f45f612ec",
    "alias" : "Browser - Conditional OTP",
    "description" : "Flow to determine if the OTP is required for the authentication",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "auth-otp-form",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "2e76f224-4580-45df-ac76-5bd958e2ecac",
    "alias" : "Direct Grant - Conditional OTP",
    "description" : "Flow to determine if the OTP is required for the authentication",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "direct-grant-validate-otp",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "23074772-41e2-430c-a0ae-de88c0031d3c",
    "alias" : "First broker login - Conditional OTP",
    "description" : "Flow to determine if the OTP is required for the authentication",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "auth-otp-form",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "c398d04f-0ace-4429-bfe6-e089f9e5072c",
    "alias" : "Handle Existing Account",
    "description" : "Handle what to do if there is existing account with same email/username like authenticated identity provider",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "idp-confirm-link",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "Account verification options",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "54cec801-faf5-4e15-a3fa-e4c349987ef1",
    "alias" : "Reset - Conditional OTP",
    "description" : "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "reset-otp",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "7f2a2601-fe7f-464a-8add-d228c06ac3d4",
    "alias" : "User creation or linking",
    "description" : "Flow for the existing/non-existing user alternatives",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticatorConfig" : "create unique user config",
      "authenticator" : "idp-create-user-if-unique",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "ALTERNATIVE",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "Handle Existing Account",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "53c6516b-1cae-4b0c-b4bb-dcff92bebc80",
    "alias" : "Verify Existing Account by Re-authentication",
    "description" : "Reauthentication of existing account",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "idp-username-password-form",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "First broker login - Conditional OTP",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "da0ac249-47ee-49d6-9d3f-32177d6d372d",
    "alias" : "browser",
    "description" : "browser based authentication",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "auth-cookie",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "auth-spnego",
      "authenticatorFlow" : false,
      "requirement" : "DISABLED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "identity-provider-redirector",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 25,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "ALTERNATIVE",
      "priority" : 30,
      "autheticatorFlow" : true,
      "flowAlias" : "forms",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "f57e7fc3-52a0-450d-90b7-a71a5131b946",
    "alias" : "clients",
    "description" : "Base authentication for clients",
    "providerId" : "client-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "client-secret",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "client-jwt",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "client-secret-jwt",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 30,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "client-x509",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 40,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "49d330f3-9975-4663-b14e-886d18dbcebc",
    "alias" : "direct grant",
    "description" : "OpenID Connect Resource Owner Grant",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "direct-grant-validate-username",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "direct-grant-validate-password",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 30,
      "autheticatorFlow" : true,
      "flowAlias" : "Direct Grant - Conditional OTP",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "2ff6df1d-9593-4dc2-93af-562daaefd835",
    "alias" : "docker auth",
    "description" : "Used by Docker clients to authenticate against the IDP",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "docker-http-basic-authenticator",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "e0e52f7c-322a-40d2-a4c3-19b5aca9f463",
    "alias" : "first broker login",
    "description" : "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticatorConfig" : "review profile config",
      "authenticator" : "idp-review-profile",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "User creation or linking",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "0d95d9cb-095c-4f88-b063-aee5119d8284",
    "alias" : "forms",
    "description" : "Username, password, otp and other auth forms.",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "auth-username-password-form",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "Browser - Conditional OTP",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "623b8fcc-3f72-4a55-a3ce-7d9987bf122e",
    "alias" : "http challenge",
    "description" : "An authentication flow based on challenge-response HTTP Authentication Schemes",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "no-cookie-redirect",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "Authentication Options",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "c30577b8-d33c-4523-b4be-ff101176c05b",
    "alias" : "registration",
    "description" : "registration flow",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "registration-page-form",
      "authenticatorFlow" : true,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : true,
      "flowAlias" : "registration form",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "ad9c0d19-efde-4ed0-b03a-a55862c72e72",
    "alias" : "registration form",
    "description" : "registration form",
    "providerId" : "form-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "registration-user-creation",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "registration-profile-action",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 40,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "registration-password-action",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 50,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "registration-recaptcha-action",
      "authenticatorFlow" : false,
      "requirement" : "DISABLED",
      "priority" : 60,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "ba6ca72f-5542-4ef0-b907-964559ffa3df",
    "alias" : "reset credentials",
    "description" : "Reset credentials for a user if they forgot their password or something",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "reset-credentials-choose-user",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "reset-credential-email",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "reset-password",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 30,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 40,
      "autheticatorFlow" : true,
      "flowAlias" : "Reset - Conditional OTP",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "08c12bfe-80d1-42cd-a04e-4639d0ece64c",
    "alias" : "saml ecp",
    "description" : "SAML ECP Profile Authentication Flow",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "http-basic-authenticator",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  } ],
  "authenticatorConfig" : [ {
    "id" : "de601c1b-28df-4a31-9a84-94e6e1fac2bd",
    "alias" : "create unique user config",
    "config" : {
      "require.password.update.after.registration" : "false"
    }
  }, {
    "id" : "61efe16e-f2cb-453b-a58c-5001370d54ad",
    "alias" : "review profile config",
    "config" : {
      "update.profile.on.first.login" : "missing"
    }
  } ],
  "requiredActions" : [ {
    "alias" : "CONFIGURE_TOTP",
    "name" : "Configure OTP",
    "providerId" : "CONFIGURE_TOTP",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 10,
    "config" : { }
  }, {
    "alias" : "terms_and_conditions",
    "name" : "Terms and Conditions",
    "providerId" : "terms_and_conditions",
    "enabled" : false,
    "defaultAction" : false,
    "priority" : 20,
    "config" : { }
  }, {
    "alias" : "UPDATE_PASSWORD",
    "name" : "Update Password",
    "providerId" : "UPDATE_PASSWORD",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 30,
    "config" : { }
  }, {
    "alias" : "UPDATE_PROFILE",
    "name" : "Update Profile",
    "providerId" : "UPDATE_PROFILE",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 40,
    "config" : { }
  }, {
    "alias" : "VERIFY_EMAIL",
    "name" : "Verify Email",
    "providerId" : "VERIFY_EMAIL",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 50,
    "config" : { }
  }, {
    "alias" : "delete_account",
    "name" : "Delete Account",
    "providerId" : "delete_account",
    "enabled" : false,
    "defaultAction" : false,
    "priority" : 60,
    "config" : { }
  }, {
    "alias" : "webauthn-register",
    "name" : "Webauthn Register",
    "providerId" : "webauthn-register",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 70,
    "config" : { }
  }, {
    "alias" : "webauthn-register-passwordless",
    "name" : "Webauthn Register Passwordless",
    "providerId" : "webauthn-register-passwordless",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 80,
    "config" : { }
  }, {
    "alias" : "update_user_locale",
    "name" : "Update User Locale",
    "providerId" : "update_user_locale",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 1000,
    "config" : { }
  } ],
  "browserFlow" : "browser",
  "registrationFlow" : "registration",
  "directGrantFlow" : "direct grant",
  "resetCredentialsFlow" : "reset credentials",
  "clientAuthenticationFlow" : "clients",
  "dockerAuthenticationFlow" : "docker auth",
  "attributes" : {
    "cibaBackchannelTokenDeliveryMode" : "poll",
    "cibaExpiresIn" : "120",
    "cibaAuthRequestedUserHint" : "login_hint",
    "oauth2DeviceCodeLifespan" : "600",
    "oauth2DevicePollingInterval" : "5",
    "parRequestUriLifespan" : "60",
    "cibaInterval" : "5"
  },
  "keycloakVersion" : "19.0.3",
  "userManagedAccessAllowed" : false,
  "clientProfiles" : {
    "profiles" : [ ]
  },
  "clientPolicies" : {
    "policies" : [ ]
  }
}